name: PR Chunker
on:
  pull_request:
    types: [opened, reopened, synchronize]
    branches: [ main ]

# Enhanced permissions
permissions:
  contents: read
  pull-requests: write
  issues: write

jobs:
  chunk-and-assign:
    runs-on: ubuntu-latest
    steps:
      # Checkout with full history
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.event.pull_request.head.sha }}

      # Setup Python
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
          cache: 'pip'

      # Install dependencies
      - name: Install dependencies
        run: |
          pip install --upgrade pip
          pip install -r scripts/pr_review/requirements.txt

      # Debug info
      - name: Show PR context
        run: |
          echo "PR Number: ${{ github.event.number }}"
          echo "Changed files:"
          git diff --name-only ${{ github.event.pull_request.base.sha }}..${{ github.event.pull_request.head.sha }} || echo "No changes"

      # Run chunker with improved error handling
      - name: Generate review chunks
        id: chunker
        run: |
          python scripts/pr_review/chunker.py \
            --repo ${{ github.repository }} \
            --pr ${{ github.event.number }} \
            --base ${{ github.event.pull_request.base.sha }} \
            --head ${{ github.event.pull_request.head.sha }} \
            --min-lines 200 \
            --max-lines 800 \
            --output chunks.md
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Post chunks as PR comment
      - name: Post chunk summary
        if: steps.chunker.outcome == 'success'
        uses: actions/github-script@v6
        with:
          script: |
            const fs = require('fs');
            const content = fs.readFileSync('chunks.md', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: content
            });

      # Create review checklist issue
      - name: Create review issue
        if: steps.chunker.outcome == 'success'
        uses: peter-evans/create-issue-from-file@v4
        with:
          title: "PR#${{ github.event.number }} Review Checklist"
          content-filepath: ./chunks.md
          token: ${{ secrets.GITHUB_TOKEN }}
          labels: "code-review"
          assignees: ${{ github.event.pull_request.requested_reviewers.*.login }}

      # Fallback if chunking fails
      - name: Post error notice
        if: steps.chunker.outcome != 'success'
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: "⚠️ Could not generate review chunks. Please review this PR manually."
            });
